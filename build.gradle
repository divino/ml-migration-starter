plugins {
	id "java"
	id "com.github.jk1.dependency-license-report" version "0.3.11"
}

repositories {
	mavenLocal()
	jcenter()
	mavenCentral()
	maven { url "http://developer.marklogic.com/maven2" }
}

configurations {
	all {
		exclude module: 'commons-logging'
		exclude module: 'log4j'
	}
}

dependencies {
	// Core dependencies needed for using Spring Batch, Spring JDBC, and marklogic-spring-batch
	compile "com.marklogic:marklogic-spring-batch-core:1.6.0"
	compile "com.marklogic:spring-batch-rdbms:1.6.0"
	compile "com.marklogic:marklogic-client-api:4.0.3.1"
	compile "org.springframework:spring-jdbc:4.0.0.RELEASE"

	compile "com.marklogic:marklogic-jena:3.0.5"

	// Using H2 as a sample database; can pull its JDBC driver from a Maven repository
	runtime "com.h2database:h2:1.4.193"

	// Can reference a local JDBC driver like this (Oracle, along with others, do not publish their JDBC driver to a public repo)
	// runtime files("./path/to/ojdbc-6.jar")

	// Forcing Spring to use logback instead of commons-logging
	runtime "ch.qos.logback:logback-classic:1.1.8"
	runtime group: "org.slf4j", name: "jcl-over-slf4j", version: "1.7.22"
	runtime group: "org.slf4j", name: "slf4j-api", version: "1.7.22"
}

task migrate(type: JavaExec) {
	description = "Run the migration program"
	main = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'
	classpath = sourceSets.test.runtimeClasspath
	args = [
		"--job_id", "migrationJob",
		"--job_path", "org.example.MigrationConfig",
		"--all_tables", "true",
		"--graph_name", "http://samples.org/graph/",
		"--table_name", "Customer",
		"--base_iri", base_iri
	]
	logger.error("sample " + args)
}

task help(type: JavaExec) {
	description = "See a list of all supported command line arguments"
	classpath = sourceSets.main.runtimeClasspath
	main = "org.example.MigrationMain"
	args = [
		"--config", "org.example.MigrationConfig",
		"--help"
	]
}

task setupH2(type: JavaExec) {
	description = "Setup a file-based instance of H2 with sample data; can remove this if not using H2"
	classpath = configurations.runtime
	main = "org.h2.tools.RunScript"
	args = [
		"-url", "jdbc:h2:file:./h2data/sample",
		"-user", "sa",
		"-password", "password",
		"-script", "./h2setup.sql"
	]
}
